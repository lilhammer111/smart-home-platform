{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/auth/mini_prog_login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "user login by mini program",
                "operationId": "LoginByMiniProg",
                "parameters": [
                    {
                        "description": "mini program login",
                        "name": "mini_login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.MiniProgLoginBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.AuthData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/auth/mobile_login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "user login by mobile number and sms code",
                "operationId": "LoginByMobile",
                "parameters": [
                    {
                        "description": "mobile login form",
                        "name": "mobile_login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.MobileLoginBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.AuthData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/auth/mobile_register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "user register by mobile, sms code and password",
                "operationId": "RegisterByMobile",
                "parameters": [
                    {
                        "description": "mobile register form",
                        "name": "mobile_register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.MobileRegisterBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.AuthData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "409": {
                        "description": "account already exists",
                        "schema": {
                            "$ref": "#/definitions/example.RespConflict"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/auth/pwd_login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "user login by username and password",
                "operationId": "LoginByPwd",
                "parameters": [
                    {
                        "description": "password",
                        "name": "pwd_login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.PwdLoginBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.AuthData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/auth/send_sms": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "captcha"
                ],
                "summary": "ask aliyun to send sms",
                "operationId": "SendSms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mobile number",
                        "name": "mobile",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/example.RespOk"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/auth/username_register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "user register by username and password",
                "operationId": "RegisterByUsername",
                "parameters": [
                    {
                        "description": "register form",
                        "name": "pwd_register_req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.UsernameRegisterBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.AuthData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "409": {
                        "description": "account already exists",
                        "schema": {
                            "$ref": "#/definitions/example.RespConflict"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/devices/alerts/delete": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alerts"
                ],
                "summary": "delete alert info",
                "operationId": "DeleteAlert",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "alert id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/example.RespOk"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/devices/alerts/detail": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alerts"
                ],
                "summary": "get alert detail",
                "operationId": "GetAlertDetail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.AlertData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/devices/alerts/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alerts"
                ],
                "summary": "get alert list",
                "operationId": "GetAlertList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "device id",
                        "name": "device_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "level",
                        "name": "level",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sorts",
                        "name": "sorts",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "start date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "end date",
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.AlertData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/devices/alerts/update": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alerts"
                ],
                "summary": "update alert info",
                "operationId": "UpdateAlertInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "alert data",
                        "name": "users",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.AlertData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.AlertData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/devices/alerts/upload": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alerts"
                ],
                "summary": "upload alert info",
                "operationId": "UploadAlertInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "alert data",
                        "name": "users",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.AlertData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.AlertData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/devices/bind": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "bind device info",
                "operationId": "BindDevice",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "device data",
                        "name": "users",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.DeviceData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.DeviceData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/devices/detail": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "get device detail",
                "operationId": "GetDeviceDetail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.DeviceData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/devices/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "get device list",
                "operationId": "GetDeviceList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "state",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sorts",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "start_date",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "end_date",
                        "name": "state",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.DeviceData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/devices/unbind": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "unbind device",
                "operationId": "UnbindDevice",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "device id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/example.RespOk"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/devices/update": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "update device info",
                "operationId": "UpdateDeviceInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "device data",
                        "name": "users",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.DeviceData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.DeviceData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/users/current": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "get current user info",
                "operationId": "GetCurUserInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.UserData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/users/deregister": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "deregister user",
                "operationId": "DeregisterUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/example.RespOk"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/users/detail": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "get users detail",
                "operationId": "GetUserDetail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.UserData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/users/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "get users list",
                "operationId": "GetUserList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.UserData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/users/update": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "update user info",
                "operationId": "UpdateUserInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "user data",
                        "name": "users",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.UserData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.UserData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "example.AlertData": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "example": 50
                },
                "desc": {
                    "type": "string",
                    "example": "hello,alert"
                },
                "device_id": {
                    "type": "integer",
                    "example": 1
                },
                "first_alarm": {
                    "type": "string",
                    "example": "2023-12-22 15:16:00"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_ongoing": {
                    "type": "boolean",
                    "example": true
                },
                "last_alarm": {
                    "type": "string",
                    "example": "2023-12-30 15:16:00"
                },
                "level": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "example.AuthData": {
            "type": "object",
            "properties": {
                "expired_at": {
                    "type": "string",
                    "example": "2023-12-25T14:59:11.322480873+08:00"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MDM0ODc1NTEsIm9yaWdfaWF0IjoxNzAzNDgzOTUxLCJ1aWQiOjN9.J5sOSjOPIgifaTpGIqzfZV3vi1ZRD6WnOJV3fok_ltk"
                }
            }
        },
        "example.DeviceData": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string",
                    "example": "test"
                },
                "hardware_version": {
                    "type": "string",
                    "example": "1.0.0"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "location_id": {
                    "type": "string",
                    "example": "1"
                },
                "name": {
                    "type": "string",
                    "example": "test"
                },
                "owner_id": {
                    "type": "integer",
                    "example": 1
                },
                "product_id": {
                    "type": "integer",
                    "example": 1
                },
                "serial_no": {
                    "type": "string",
                    "example": "1234567890123456"
                },
                "software_version": {
                    "type": "string",
                    "example": "1.0.0"
                },
                "state": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "example.MiniProgLoginBody": {
            "type": "object",
            "properties": {
                "wxCode": {
                    "type": "string",
                    "example": "wx1234567890abcdef1234567890abcdef"
                }
            }
        },
        "example.MobileLoginBody": {
            "type": "object",
            "properties": {
                "mobile": {
                    "type": "string",
                    "example": "19535876981"
                },
                "smsCode": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "example.MobileRegisterBody": {
            "type": "object",
            "properties": {
                "mobile": {
                    "type": "string",
                    "example": "19535876981"
                },
                "password": {
                    "type": "string",
                    "example": "12345678"
                },
                "smsCode": {
                    "type": "string",
                    "example": "123456"
                },
                "username": {
                    "type": "string",
                    "example": "demon_wang"
                }
            }
        },
        "example.PwdLoginBody": {
            "type": "object",
            "properties": {
                "password": {
                    "description": "2: required string Email (api.body=\"email\", api.vd=\"regexp('^\\\\w+([-+.]\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*$')\");",
                    "type": "string",
                    "example": "12345678"
                },
                "username": {
                    "type": "string",
                    "example": "demon_wang"
                }
            }
        },
        "example.RespBadRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "bad request"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "example.RespConflict": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 409
                },
                "message": {
                    "type": "string",
                    "example": "account already exists"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "example.RespInternal": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 500
                },
                "message": {
                    "type": "string",
                    "example": "internal error"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "example.RespNotFound": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 404
                },
                "message": {
                    "type": "string",
                    "example": "not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "example.RespOk": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "ok"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "example.RespUnauthorized": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 401
                },
                "message": {
                    "type": "string",
                    "example": "authentication fails"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "example.UserData": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 18
                },
                "avatar": {
                    "type": "string",
                    "example": ""
                },
                "email": {
                    "type": "string",
                    "example": "wwwwwdemon@gmail.com"
                },
                "gender": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "mobile": {
                    "type": "string",
                    "example": "19535876981"
                },
                "password": {
                    "type": "string",
                    "example": "12345678"
                },
                "profile": {
                    "type": "string",
                    "example": "hello,world"
                },
                "username": {
                    "type": "string",
                    "example": "lilhammer111"
                }
            }
        },
        "example.UsernameRegisterBody": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "12345678"
                },
                "username": {
                    "type": "string",
                    "example": "demon_wang"
                }
            }
        }
    }
}