{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/auth/mini_prog_login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "user login by mini program",
                "operationId": "LoginByMiniProg",
                "parameters": [
                    {
                        "description": "mini program login",
                        "name": "mini_login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.MiniProgLoginBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.AuthData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/auth/mobile_login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "user login by mobile number and sms code",
                "operationId": "LoginByMobile",
                "parameters": [
                    {
                        "description": "mobile login form",
                        "name": "mobile_login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.MobileLoginBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.AuthData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/auth/mobile_register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "user register by mobile, sms code and password",
                "operationId": "RegisterByMobile",
                "parameters": [
                    {
                        "description": "mobile register form",
                        "name": "mobile_register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.MobileRegisterBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.AuthData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "409": {
                        "description": "account already exists",
                        "schema": {
                            "$ref": "#/definitions/example.RespConflict"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/auth/pwd_login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "user login by username and password",
                "operationId": "LoginByPwd",
                "parameters": [
                    {
                        "description": "password",
                        "name": "pwd_login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.PwdLoginBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.AuthData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/auth/send_sms": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "captcha"
                ],
                "summary": "ask aliyun to send sms",
                "operationId": "SendSms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mobile number",
                        "name": "mobile",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/example.RespOk"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/auth/username_register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "user register by username and password",
                "operationId": "RegisterByUsername",
                "parameters": [
                    {
                        "description": "register form",
                        "name": "pwd_register_req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.UsernameRegisterBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.AuthData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "409": {
                        "description": "account already exists",
                        "schema": {
                            "$ref": "#/definitions/example.RespConflict"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/devices/alerts/delete": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alerts"
                ],
                "summary": "delete alert info",
                "operationId": "DeleteAlert",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "alert id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/example.RespOk"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/devices/alerts/detail": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alerts"
                ],
                "summary": "get alert detail",
                "operationId": "GetAlertDetail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.AlertData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/devices/alerts/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alerts"
                ],
                "summary": "get alert list",
                "operationId": "GetAlertList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "device id",
                        "name": "device_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "level",
                        "name": "level",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sorts",
                        "name": "sorts",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "start date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "end date",
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.AlertData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/devices/alerts/update": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alerts"
                ],
                "summary": "update alert info",
                "operationId": "UpdateAlertInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "alert data",
                        "name": "users",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.AlertData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.AlertData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/devices/alerts/upload": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alerts"
                ],
                "summary": "upload alert info",
                "operationId": "UploadAlertInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "alert data",
                        "name": "users",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.AlertData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.AlertData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/devices/bind": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "bind device info",
                "operationId": "BindDevice",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "device data",
                        "name": "devices",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.DeviceData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.DeviceData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/devices/detail": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "get device detail",
                "operationId": "GetDeviceDetail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.DeviceData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/devices/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "get device list",
                "operationId": "GetDeviceList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "state",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sorts",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "start_date",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "end_date",
                        "name": "state",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/example.DeviceData"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/devices/unbind": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "unbind device",
                "operationId": "UnbindDevice",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "device id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/example.RespNoContent"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/devices/update": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "update device info",
                "operationId": "UpdateDeviceInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "device data",
                        "name": "devices",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.DeviceData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.DeviceData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/add": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "add a new product",
                "operationId": "AddNewProduct",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "product data",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.NewProductBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespCreated"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.ProductData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/banners/add": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product banners"
                ],
                "summary": "bind banner info",
                "operationId": "AddNewBanner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "banner data",
                        "name": "banner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.NewBannerBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespCreated"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.BannerData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/banners/delete": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product banners"
                ],
                "summary": "delete a product banner",
                "operationId": "DeleteBanner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "banner id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.Empty"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/banners/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product banners"
                ],
                "summary": "get all banners",
                "operationId": "GetAllBanners",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/example.BannerData"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/banners/update": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product banners"
                ],
                "summary": "update banner info",
                "operationId": "UpdateBanner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "banner data",
                        "name": "banner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.BannerData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.BannerData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/brands/add": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product brands"
                ],
                "summary": "bind brand info",
                "operationId": "AddNewBrand",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "brand data",
                        "name": "brand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.NewBrandBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespCreated"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.DeviceData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/brands/all": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product brands"
                ],
                "summary": "get brand list",
                "operationId": "GetBrandList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/example.BrandData"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/brands/delete": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product brands"
                ],
                "summary": "delete brand record",
                "operationId": "DeleteBrand",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/example.RespNoContent"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/brands/detail": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product brands"
                ],
                "summary": "get brand detail",
                "operationId": "GetBrandDetail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.BrandData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/brands/related": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product brands"
                ],
                "summary": "get brands list by category id",
                "operationId": "GetRelatedBrandsByCategoryId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "category_id",
                        "name": "category_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/example.BrandData"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/brands/update": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product brands"
                ],
                "summary": "update brand info",
                "operationId": "UpdateBrand",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "brand data",
                        "name": "brand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.BrandData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.BrandData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/categories/add": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product categories"
                ],
                "summary": "add a new category",
                "operationId": "AddNewCategory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "category data",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.NewCategoryBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespCreated"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.CategoryData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/categories/delete": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product categories"
                ],
                "summary": "delete category record",
                "operationId": "DeleteCategory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/example.RespNoContent"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/categories/detail": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product categories"
                ],
                "summary": "get category detail",
                "operationId": "GetCategoryDetail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.CategoryData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/categories/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product categories"
                ],
                "summary": "get category list",
                "operationId": "GetCategoryList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/example.CategoryData"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/categories/update": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product categories"
                ],
                "summary": "update category info",
                "operationId": "UpdateCategory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "category data",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.CategoryData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.CategoryData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/category_brand/batch_add": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product category_brand"
                ],
                "summary": "add related categories in batch by brand id",
                "operationId": "BatchAddCategoryBrand",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "category_brand data",
                        "name": "category_brand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.NewCategoryBrandBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespCreated"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.CategoryBrandData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/category_brand/batch_reduce": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product category_brand"
                ],
                "summary": "reduce related categories in batch by brand id",
                "operationId": "BatchReduceCategoryBrand",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "category data",
                        "name": "category_brand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.NewCategoryBrandBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/example.RespNoContent"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/category_brand/delete_brand": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product category_brand"
                ],
                "summary": "delete related brand by category id",
                "operationId": "DeleteBrandByCategory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/example.RespNoContent"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/category_brand/delete_category": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product category_brand"
                ],
                "summary": "delete related category by brand id",
                "operationId": "DeleteCategoryByBrand",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/example.RespNoContent"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/delete": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "delete product",
                "operationId": "DeleteProduct",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/example.RespNoContent"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/detail": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "get product detail",
                "operationId": "GetProductDetail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.ProductData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "get product list",
                "operationId": "GetProductList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "state",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "category_id",
                        "name": "category_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "brand_id",
                        "name": "brand_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sorts",
                        "name": "sorts",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/example.ProductData"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/models/add": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product models"
                ],
                "summary": "add a new product model",
                "operationId": "AddNewModel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "model request body",
                        "name": "models",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.AddModelBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.ModelData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/models/delete": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product models"
                ],
                "summary": "delete a product model",
                "operationId": "DeleteModel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "model id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.Empty"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/models/detail": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product models"
                ],
                "summary": "get product model detail",
                "operationId": "GetModelDetail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.DeviceData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/models/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product models"
                ],
                "summary": "get all models",
                "operationId": "GetAllModels",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/example.ModelData"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/update": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "update product info",
                "operationId": "UpdateProduct",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "product data",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.ProductData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.ProductData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/products/update_rating": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "update product rating info",
                "operationId": "UpdateRating",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "product rating data",
                        "name": "rating",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.RatingReqBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.RatingData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/users/current": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "get current user info",
                "operationId": "GetCurUserInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.UserData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/users/deregister": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "deregister user",
                "operationId": "DeregisterUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/example.RespOk"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/users/detail": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "get users detail",
                "operationId": "GetUserDetail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.UserData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/users/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "get users list",
                "operationId": "GetUserList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.UserData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        },
        "/api/users/update": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "update user info",
                "operationId": "UpdateUserInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer User's access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "user data",
                        "name": "users",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/example.UserData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/example.RespOk"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/example.UserData"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/example.RespBadRequest"
                        }
                    },
                    "401": {
                        "description": "authentication failed",
                        "schema": {
                            "$ref": "#/definitions/example.RespUnauthorized"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/example.RespNotFound"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/example.RespInternal"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "example.AddModelBody": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "豪华旗舰款"
                }
            }
        },
        "example.AlertData": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "example": 50
                },
                "desc": {
                    "type": "string",
                    "example": "hello,alert"
                },
                "device_id": {
                    "type": "integer",
                    "example": 1
                },
                "first_alarm": {
                    "type": "string",
                    "example": "2023-12-22 15:16:00"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_ongoing": {
                    "type": "boolean",
                    "example": true
                },
                "last_alarm": {
                    "type": "string",
                    "example": "2023-12-30 15:16:00"
                },
                "level": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "example.AuthData": {
            "type": "object",
            "properties": {
                "expired_at": {
                    "type": "string",
                    "example": "2023-12-25T14:59:11.322480873+08:00"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MDM0ODc1NTEsIm9yaWdfaWF0IjoxNzAzNDgzOTUxLCJ1aWQiOjN9.J5sOSjOPIgifaTpGIqzfZV3vi1ZRD6WnOJV3fok_ltk"
                }
            }
        },
        "example.BannerData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "index": {
                    "type": "integer",
                    "example": 1
                },
                "picture": {
                    "type": "string",
                    "example": "https://img.freepik.com/free-psd/bold-gradients-banner-template_23-2148819008.jpg?t=st=1703601665~exp=1703602265~hmac=84f6d13b72f5e743e64c58166cfe6323de3809450b6dfa9340cb80ab5e455a51"
                },
                "product_link": {
                    "type": "string",
                    "example": "https://pet.service.com/prodcut-link"
                }
            }
        },
        "example.BrandData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "logo": {
                    "type": "string",
                    "example": "https://upload.wikimedia.org/wikipedia/commons/2/29/Xiaomi_logo.svg"
                },
                "name": {
                    "type": "string",
                    "example": "xiaomi"
                }
            }
        },
        "example.CategoryBrandData": {
            "type": "object",
            "properties": {
                "brand_id": {
                    "type": "integer",
                    "example": 5
                },
                "category_id": {
                    "type": "integer",
                    "example": 10
                },
                "id": {
                    "type": "integer",
                    "example": 123
                }
            }
        },
        "example.CategoryData": {
            "type": "object",
            "properties": {
                "brief": {
                    "type": "string",
                    "example": "An automated feeder for pets"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "smart pet feeder"
                },
                "picture": {
                    "type": "string",
                    "example": "https://example.com/pet_feeder.jpg"
                },
                "showcase": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "https://example.com/showcase1.jpg",
                        " https://example.com/showcase2.jpg"
                    ]
                }
            }
        },
        "example.DeviceData": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string",
                    "example": "test"
                },
                "hardware_version": {
                    "type": "string",
                    "example": "1.0.0"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "location_id": {
                    "type": "string",
                    "example": "1"
                },
                "name": {
                    "type": "string",
                    "example": "test"
                },
                "owner_id": {
                    "type": "integer",
                    "example": 1
                },
                "product_id": {
                    "type": "integer",
                    "example": 1
                },
                "serial_no": {
                    "type": "string",
                    "example": "1234567890123456"
                },
                "software_version": {
                    "type": "string",
                    "example": "1.0.0"
                },
                "state": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "example.Empty": {
            "type": "object"
        },
        "example.MiniProgLoginBody": {
            "type": "object",
            "properties": {
                "wxCode": {
                    "type": "string",
                    "example": "wx1234567890abcdef1234567890abcdef"
                }
            }
        },
        "example.MobileLoginBody": {
            "type": "object",
            "properties": {
                "mobile": {
                    "type": "string",
                    "example": "19535876981"
                },
                "smsCode": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "example.MobileRegisterBody": {
            "type": "object",
            "properties": {
                "mobile": {
                    "type": "string",
                    "example": "19535876981"
                },
                "password": {
                    "type": "string",
                    "example": "12345678"
                },
                "smsCode": {
                    "type": "string",
                    "example": "123456"
                },
                "username": {
                    "type": "string",
                    "example": "demon_wang"
                }
            }
        },
        "example.ModelData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "豪华旗舰款"
                }
            }
        },
        "example.NewBannerBody": {
            "type": "object",
            "properties": {
                "index": {
                    "type": "integer",
                    "example": 1
                },
                "picture": {
                    "type": "string",
                    "example": "https://img.freepik.com/free-psd/bold-gradients-banner-template_23-2148819008.jpg?t=st=1703601665~exp=1703602265~hmac=84f6d13b72f5e743e64c58166cfe6323de3809450b6dfa9340cb80ab5e455a51"
                },
                "product_link": {
                    "type": "string",
                    "example": "https://pet.service.com/prodcut-link"
                }
            }
        },
        "example.NewBrandBody": {
            "type": "object",
            "properties": {
                "logo": {
                    "type": "string",
                    "example": "https://upload.wikimedia.org/wikipedia/commons/2/29/Xiaomi_logo.svg"
                },
                "name": {
                    "type": "string",
                    "example": "xiaomi"
                }
            }
        },
        "example.NewCategoryBody": {
            "type": "object",
            "properties": {
                "brief": {
                    "type": "string",
                    "example": "An automated feeder for pets"
                },
                "name": {
                    "type": "string",
                    "example": "smart pet feeder"
                },
                "picture": {
                    "type": "string",
                    "example": "https://example.com/pet_feeder.jpg"
                },
                "showcase": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "https://example.com/showcase1.jpg",
                        " https://example.com/showcase2.jpg"
                    ]
                }
            }
        },
        "example.NewCategoryBrandBody": {
            "type": "object",
            "properties": {
                "brand_id": {
                    "type": "integer",
                    "example": 5
                },
                "category_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        10,
                        11,
                        12
                    ]
                }
            }
        },
        "example.NewProductBody": {
            "type": "object",
            "properties": {
                "brandId": {
                    "type": "integer"
                },
                "brief": {
                    "type": "string"
                },
                "categoryId": {
                    "type": "integer"
                },
                "modelId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "ratingId": {
                    "type": "integer"
                },
                "showcase": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "state": {
                    "$ref": "#/definitions/example.ProductState"
                }
            }
        },
        "example.ProductData": {
            "type": "object",
            "properties": {
                "brandId": {
                    "type": "integer"
                },
                "brief": {
                    "type": "string"
                },
                "categoryId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "modelId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "ratingId": {
                    "type": "integer"
                },
                "showcase": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "state": {
                    "$ref": "#/definitions/example.ProductState"
                }
            }
        },
        "example.ProductState": {
            "type": "integer",
            "enum": [
                1,
                2,
                4,
                8,
                16
            ],
            "x-enum-varnames": [
                "OnSale",
                "IsFreeShipping",
                "IsNew",
                "IsHot",
                "IsRecommended"
            ]
        },
        "example.PwdLoginBody": {
            "type": "object",
            "properties": {
                "password": {
                    "description": "2: required string Email (api.body=\"email\", api.vd=\"regexp('^\\\\w+([-+.]\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*$')\");",
                    "type": "string",
                    "example": "12345678"
                },
                "username": {
                    "type": "string",
                    "example": "demon_wang"
                }
            }
        },
        "example.RatingData": {
            "type": "object",
            "properties": {
                "cur_rating": {
                    "type": "number",
                    "example": 4.5
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "product_id": {
                    "type": "integer",
                    "example": 1
                },
                "total_customer": {
                    "type": "integer",
                    "example": 250
                }
            }
        },
        "example.RatingReqBody": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "integer",
                    "example": 1
                },
                "rating": {
                    "type": "number",
                    "example": 4.5
                }
            }
        },
        "example.RespBadRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "Bad request."
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "example.RespConflict": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 409
                },
                "message": {
                    "type": "string",
                    "example": "Already exists."
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "example.RespCreated": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 201
                },
                "message": {
                    "type": "string",
                    "example": "Creating successes."
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "example.RespInternal": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 500
                },
                "message": {
                    "type": "string",
                    "example": "Internal server error."
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "example.RespNoContent": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 204
                },
                "message": {
                    "type": "string",
                    "example": "Deleting successes."
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "example.RespNotFound": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 404
                },
                "message": {
                    "type": "string",
                    "example": "Not found."
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "example.RespOk": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "OK."
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "example.RespUnauthorized": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 401
                },
                "message": {
                    "type": "string",
                    "example": "Authentication fails."
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "example.UserData": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 18
                },
                "avatar": {
                    "type": "string",
                    "example": ""
                },
                "email": {
                    "type": "string",
                    "example": "wwwwwdemon@gmail.com"
                },
                "gender": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "mobile": {
                    "type": "string",
                    "example": "19535876981"
                },
                "password": {
                    "type": "string",
                    "example": "12345678"
                },
                "profile": {
                    "type": "string",
                    "example": "hello,world"
                },
                "username": {
                    "type": "string",
                    "example": "lilhammer111"
                }
            }
        },
        "example.UsernameRegisterBody": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "12345678"
                },
                "username": {
                    "type": "string",
                    "example": "demon_wang"
                }
            }
        }
    }
}